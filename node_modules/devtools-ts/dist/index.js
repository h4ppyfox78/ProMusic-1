var x=Object.create;var f=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var M=Object.getOwnPropertyNames;var I=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var a=(n,e)=>f(n,"name",{value:e,configurable:!0});var $=(n,e)=>{for(var r in e)f(n,r,{get:e[r],enumerable:!0})},T=(n,e,r,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of M(e))!E.call(n,i)&&i!==r&&f(n,i,{get:()=>e[i],enumerable:!(t=S(e,i))||t.enumerable});return n};var b=(n,e,r)=>(r=n!=null?x(I(n)):{},T(e||!n||!n.__esModule?f(r,"default",{value:n,enumerable:!0}):r,n)),A=n=>T(f({},"__esModule",{value:!0}),n);var B={};$(B,{APIs:()=>d,Music:()=>c,Playlist:()=>g,StringUtils:()=>p,Track:()=>l,Utils:()=>y,deezer:()=>C,soundcloud:()=>U,spotify:()=>z,youtube:()=>q});module.exports=A(B);var o=require("play-dl");var l=class{constructor(e){if(!e)throw new Error("Constructor was not initialized properly!");this.title=e.title,this.url=e.url,this.thumbnails=e?.thumbnails||void 0,this.duration=e?.durationInSec,this.type=e.type,this.description=e?.description,this.views=e?.views,this.channel={name:e?.channel?.name,url:e?.channel?.url},this.private=e?.private,this.shortTitle=e?.shortTitle,this.rank=e?.rank,this.explicit=e?.explicit,this.previewURL=e?.previewURL,this.artist=e?.artist,this.album=e?.album}};a(l,"Track");var c=class{async youtube(e){if(!e)throw new Error("No search query was provided!");let r=(0,o.yt_validate)(e);if(!r)throw new Error("This is not a valid search query!");let t,i;switch(console.log(r),r){case"video":if(i=await(0,o.search)(e),!i)throw new Error("This Track was not found!");t=i.map(s=>(console.log(s),new l(s)));break;case"search":if(i=await(0,o.search)(e),!i)throw new Error("No Song was found for this query!");t=i.map(s=>(console.log(s.thumbnails[0].url),new l(s)));break}return t}async deezer(e){if(!e)throw new Error("No search query was provided!");let r=await(0,o.dz_validate)(e);if(!r)throw new Error("This is not a valid search query!");let t,i;switch(r){case"search":i=await(0,o.search)(e,{source:{deezer:"track"}}),t=i.map(s=>new l(s));break;case"playlist":i=await(0,o.deezer)(e),t=i;break;case"track":i=await(0,o.search)(e,{source:{deezer:"track"}}),t=i.map(s=>new l(s));break;case"album":i=await(0,o.deezer)(e),t=i;break}return t}async spotify(e){if(!e)throw new Error("No search query was provided!");if(!(0,o.sp_validate)(e))throw new Error("This is not a valid search query!");return await(0,o.spotify)(e)}async soundcloud(e){if(!e)throw new Error("No search query was provided!");if(!(0,o.so_validate)(e))throw new Error("This is not a valid search query!");return await(0,o.soundcloud)(e)}};a(c,"Music");var g=class{constructor(e){this.type=e.type,this.id=e.id,this.url=e.url,this.title=e.title,this.videoCount=e.videoCount,this.channel=e.channel,this.thumbnail=e.thumbnail,this.videos=e.videos}};a(g,"Playlist");var m=b(require("node-fetch")),D=require("jikanjs");D.settings.setBaseURL("https://api.jikan.moe/v3",3);var d=class{constructor(e){this.TMDBKey=e}async getShowID(e){try{let t=await(await(0,m.default)(`https://api.themoviedb.org/3/search/tv?api_key=${this.TMDBKey}&language=en-US&query=${e}`)).json();return this.ShowID=t.results[0].id}catch(r){throw r}}async getShowDetails(e,r){if(!r)throw new Error("A TMDB API Key is required!");try{return await this.getShowID(e),await(await(0,m.default)(`https://api.themoviedb.org/3/tv/${this.ShowID}?api_key=${this.TMDBKey}&language=en-US`)).json()}catch(t){console.error(t)}}async getAnimeInfo(e,r="anime"){try{let i=(await D.search(r,e,[1])).results[0].mal_id,s=await D.loadAnime(i,"/"),h=s.genres.map(k=>k.name);return{malid:s.mal_id,imageUrl:s.image_url,titlerom:s.title,titleeng:s.title_english,episodes:s.episodes,status:s.status,rating:s.rating,score:s.score,rank:s.rank,synopsis:s.synopsis,premiered:s.premiered,genres:h,aired:s.aired.string}}catch(t){throw t}}async getMovieID(e){try{let t=await(await(0,m.default)(`https://api.themoviedb.org/3/search/movie?api_key=${this.TMDBKey}&language=en-US&query=${e}`)).json();if(!t.total_results)throw new Error("Nothing found with this name!");return this.MovieID=t.results[0].id}catch(r){throw r}}async getMovieDetails(e,r){if(!r)throw new Error("A TMDB API Key is required!");try{return await this.getMovieID(e),await(await(0,m.default)(`https://api.themoviedb.org/3/movie/${this.MovieID}?api_key=${this.TMDBKey}&language=en-US`)).json()}catch(t){throw t}}async request(e,r={}){try{return await(await(0,m.default)(e,r)).json()}catch(t){throw t}}};a(d,"APIs");var p=class{chunkSubString(e,r){let t=Math.ceil(e.length/r),i=new Array(t);for(let s=0,h=0;s<t;++s,h+=r)i[s]=e.substr(h,r);return i}RandomPasswordGenerator(e){let r="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?!$",t=e,i="";for(let s=0;s<t;s++){let h=Math.floor(Math.random()*r.length);i+=r[h]}return i}GenerateABunchOfRandomPasswords(e,r){let t=[];for(let i=0;i<e;i++)t.push(this.RandomPasswordGenerator(r));return t}};a(p,"StringUtils");var w=b(require("mongoose")),v=b(require("chalk")),P=b(require("moment")),y=class{logger(e,r="log"){let t=`${(0,P.default)().format("DD-MM-YYYY hh:mm:ss")}`;switch(r){case"log":return console.log(`[${v.default.gray(t)}]: [${v.default.black.bgGreen(r.toUpperCase())}] ${e}`);case"error":return console.log(`[${v.default.gray(t)}]: [${v.default.black.bgRed(r.toUpperCase())}] ${e}`);default:throw new TypeError("Logger type must be either log or error!")}}connectToDataBase(e){let r={useNewUrlParser:!0,autoIndex:!1,connectTimeoutMS:1e4,family:4,useUnifiedTopology:!0};w.default.connect(e,r),w.default.Promise=global.Promise,w.default.connection.on("connected",()=>{this.logger("[DB] DATABASE CONNECTED")}),w.default.connection.on("err",t=>{this.logger(`Mongoose connection error: 
 ${t.stack}`,"error")}),w.default.connection.on("disconnected",()=>{this.logger("Mongoose disconnected","error")})}};a(y,"Utils");async function q(n){return await new c().youtube(n)}a(q,"youtube");async function C(n){return await new c().deezer(n)}a(C,"deezer");async function z(n){return await new c().spotify(n)}a(z,"spotify");async function U(n){return await new c().soundcloud(n)}a(U,"soundcloud");0&&(module.exports={APIs,Music,Playlist,StringUtils,Track,Utils,deezer,soundcloud,spotify,youtube});
//# sourceMappingURL=index.js.map